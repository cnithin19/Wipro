code 1

  using System;

struct Product
{
    // Define fields for product details
    public string Name; // Stores product name
    public decimal Price; // Stores product price
    public int Quantity; // Stores product quantity

    // Constructor to initialize the product fields
    public Product(string name, decimal price, int quantity)
    {
        this.Name=name;
        this.Price=price;
        this.Quantity=quantity;
        // Assign the product name
        // Assign the product price
         // Assign the product quantity
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Initialize the inventory
        
        Product[] products=new Product[200];
        // Maximum number of products
           int maxProducts=200;
        // Array to store products

         // Counter to track added products
        int  productCount=0;

        while (true)
        {
            // Display menu options for user interaction
            Console.WriteLine("1. Add Product");
            Console.WriteLine("2. View Products");
            Console.WriteLine("3. Update Product");
            Console.WriteLine("4. Exit");
            Console.Write("Enter your choice: ");
            string choice = Console.ReadLine(); // Read user choice

            switch (choice)
            {
                case "1":
                    // Add a new product
                    if (productCount < maxProducts)
                    {
                        Console.Write("Enter product name: ");
                        string name = Console.ReadLine(); // Get product name
                        Console.Write("Enter product price: ");
                        decimal price = Convert.ToDecimal(Console.ReadLine()); // Get and convert price
                        Console.Write("Enter product quantity: ");
                        int quantity = Convert.ToInt32(Console.ReadLine()); // Get and convert quantity
                        products[productCount] = new Product(name, price, quantity); // Add product
                        productCount++; // Increment product count
                        Console.WriteLine("Product added successfully!");
                    }
                    else
                    {
                        Console.WriteLine("Inventory is full!"); // Show error if full
                    }
                    break;
                case "2":
                    // View all products
                    for (int i = 0; i < productCount; i++)
                    {
                        Console.WriteLine($"Name: {products[i].Name}, Price: {products[i].Price:F1}, Quantity: {products[i].Quantity}");
                    }
                    break;
                case "3":
                    // Update an existing product
                    Console.Write("Enter product name to update: ");
                    string updateName = Console.ReadLine();
                    bool found = false;
                    for (int i = 0; i < productCount; i++)
                    {
                        if (products[i].Name.Equals(updateName, StringComparison.OrdinalIgnoreCase))
                        {
                            found = true; // Mark as found
                            Console.Write("Enter new price: ");
                            products[i].Price = Convert.ToDecimal(Console.ReadLine()); // Update price
                            Console.Write("Enter new quantity: ");
                            products[i].Quantity = Convert.ToInt32(Console.ReadLine()); // Update quantity
                            Console.WriteLine("Product updated successfully!");
                            break;
                        }
                    }
                    if (!found)
                    {
                        Console.WriteLine("Product not found!"); // Handle missing product
                    }
                    break;
                case "4":
                    // Exit the application
                    return;
                default:
                    Console.WriteLine("Invalid choice, please try again."); // Handle invalid input
                    break;
            }
        }
    }
}
code 2

using System;

class Book
{
    // Define properties
    // Complete Step 1:............
    string Title {get;set;}
    string Author {get;set;}
    int Year {get;set;}

    // Define constructor
    public Book(string t,string a,int y){
        Title=t;
        Author=a;
        Year=y;
    }
    public void show(string t,string a,int y){
        Console.WriteLine($"Book Title: {t}");
        Console.WriteLine($"Book Author: {a}");
        Console.WriteLine($"Book Year: {y}");
    }
    // Complete Step 2:............
}

class Program
{
    static void Main(string[] args)
    {
        // Prompt the user to enter book details
        Console.WriteLine("Enter book's title:");
        // Complete Step 3:............
        string t=Console.ReadLine();

        Console.WriteLine("Enter book's author:");
        // Complete Step 4:............
        string a=Console.ReadLine();

        Console.WriteLine("Enter book's year:");
        // Complete Step 5:............
        int y=Convert.ToInt32(Console.ReadLine());

        // Create an instance of the Book class
        // Complete Step 6:............
        Book b=new Book(t,a,y);

        b.show(t,a,y);
        // Print book details
        // Complete Step 7:............
    }
}



  
